@startuml

'skinparam ClassBorderColor #F1C40F
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam shadowing false

skinparam StateBorderColor #D4AC0D
skinparam ActivityBorderColor #D4AC0D

' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #EAFAF1
skinparam ClassBorderColor<<green>> #2ECC71
hide <<green>> stereotype

' Orange
skinparam ClassBackgroundColor<<orange>> #FDF2E9
skinparam ClassBorderColor<<orange>> #E67E22
hide <<orange>> stereotype

' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

actor "Ticketing Application" as app #gold
participant "Calypso API" as capi #pink
participant "Reader API" as rapi #pink
participant "Calypso Card\nReader" as cardReader #lightBlue
boundary "**Card**" as card #lightBlue
participant "Calypso SAM\nReader" as samReader #lightGreen
boundary "selected\n**SAM**" as sam #lightGreen

activate app #gold
activate sam #lightGreen

== Card selection & identification ==

app->capi: <font color=red>**prepare**</font> card selection scenario:\n\t- filter by specific AID\n\t- Select File current DF
activate capi  #pink
note over capi
    Recover the card keyset information through the DF selection.
end note

capi-->app
deactivate capi

app->rapi: <font color=red>**process**</font> explicit card selection scenario
activate rapi  #pink
rapi-[#0000FF]>cardReader: <font color=blue>**Card #1**</font>\ntransmit selection request\n\t- card selector\n\t- APDU list
activate cardReader #lightBlue

cardReader->card: open card channel
activate card #lightBlue
card-->cardReader
cardReader->card: select application (aid)
card-->cardReader: [card FCI]
cardReader->cardReader: checks invalidation status

'group Card APDU commands outside secure session
    cardReader->card: Select File (current DF)
    card-->cardReader: [KIF/KVC for key #1 #2 #3]
'end

cardReader--[#0000FF]>rapi: receive selection response
deactivate cardReader

rapi-->app: selected active SmartCard image
deactivate rapi

app->capi: **cast** Calypso card
activate capi  #pink
capi-->app: [Calypso card image:\n\t- identification data with PIN support\n\t- key #1 reference\n\t- key #2 reference\n\t- key #3 reference]

deactivate capi

== Card secure transaction ==

app->app: **instantiate** Calypso card transaction:\n\t- Calypso card resource\n\t- Calypso SAM resource


app->capi: <font color=red>**process**</font> Change Key (current key #x reference,\n\t\t\t\tnew key #x reference)
activate capi  #pink

capi-[#0000FF]>cardReader: <font color=blue>**Card #2**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

'group Card APDU commands inside session
    cardReader->card: Get Challenge
    card-->cardReader: [Card challenge]
'end

cardReader--[#0000FF]>capi: [Card challenge]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #1**</font>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen

samReader->sam: select diversifier (card serial)
sam-->samReader
samReader->sam: Give Random (card challenge)
sam-->samReader: ack
samReader->sam: Card Generate Key (new key reference, old ciphering key reference)
sam-->samReader: [ciphered key #x]

samReader-[#00FF00]->capi: [ciphered key #x]
deactivate samReader

capi-[#0000FF]>cardReader: <font color=blue>**Card #3**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

'group Card APDU commands inside session
    cardReader->card: Change Key (ciphered key #x)
    card-->cardReader: ack
'end


cardReader-[#0000FF]->capi: ack
deactivate cardReader

capi-->app: [Calypso card image:\n\t- identification data with PIN support\n\t- key #1 reference (updated)\n\t- key #2 reference\n\t- key #3 reference]
deactivate capi

app->capi: <font color=red>**prepare**</font>:\n\t- release channel
activate capi  #pink
capi-->app
deactivate capi

app->capi: <font color=red>**process**</font> Change PIN (new PIN value)
activate capi  #pink

capi-[#0000FF]>cardReader: <font color=blue>**Card #4**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

'group Card APDU commands inside session
    cardReader->card: Get Challenge
    card-->cardReader: [Card challenge]
'end

cardReader--[#0000FF]>capi: [Card challenge]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #2**</font>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen

samReader->sam: select diversifier (card serial)
sam-->samReader
samReader->sam: Give Random (card challenge)
sam-->samReader: ack
samReader->sam: Card Cipher PIN (new plain PIN, ciphering key reference)
sam-->samReader: [ciphered PIN]

samReader-[#00FF00]->capi: [ciphered PIN]
deactivate samReader

capi-[#0000FF]>cardReader: <font color=blue>**Card #5**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

'group Card APDU commands inside session
    cardReader->card: Change PIN (ciphered PIN)
    card-->cardReader: ack
'end

cardReader->card: close card channel
card-->cardReader
deactivate card

cardReader-[#0000FF]->capi: ack
deactivate cardReader

capi-->app: [Calypso card image:\n\t- identification data with PIN support\n\t- key #1 reference (updated)\n\t- key #2 reference\n\t- key #3 reference]
deactivate capi

deactivate capi
@enduml