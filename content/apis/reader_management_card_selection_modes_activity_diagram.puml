@startuml
skin rose

'skinparam ClassBorderColor #F1C40F
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam shadowing false

skinparam StateBorderColor #D4AC0D
skinparam ActivityBorderColor #D4AC0D

' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #EAFAF1
skinparam ClassBorderColor<<green>> #2ECC71
hide <<green>> stereotype

' Orange
skinparam ClassBackgroundColor<<orange>> #FDF2E9
skinparam ClassBorderColor<<orange>> #E67E22
hide <<orange>> stereotype

' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

start
partition "Reader initialization" {
''	:register plugin;
	:get reader;
	:prepare card selection scenario;
}

if (card selection mode?) then (**explicit selection**)


    if (test card presence?) then (present)
'    !pragma useVerticalIf on
        #palegreen:**process** explicit selection;
    else (absent)
        #pink:error;
        kill
    endif


else (**scheduled selection**)
    :schedule selection scenario;
    :start reader observation;
    :start card detection;
    :wait for a card...;
	detach
	fork
		partition "Reader observation background task" {
'		    :card presence polling:\n\tis card absent?;
		    while(card presence polling?) is (absent)
            endwhile (present)

            #palegreen:**process** scheduled selection scenario;
            :notifies card inserted & selected;
		}
	end fork
	detach
	:receive selection notification;
	:parse selection result;
endif
	:get selected card;
-[#green,dashed]-> Then specific operations could
  be processed with the card...;
	:send APDU commands to the card;
@enduml