@startuml

'skinparam ClassBorderColor #F1C40F
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam shadowing false

skinparam StateBorderColor #D4AC0D
skinparam ActivityBorderColor #D4AC0D

' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #EAFAF1
skinparam ClassBorderColor<<green>> #2ECC71
hide <<green>> stereotype

' Orange
skinparam ClassBackgroundColor<<orange>> #FDF2E9
skinparam ClassBorderColor<<orange>> #E67E22
hide <<orange>> stereotype

' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

actor "Ticketing Application" as app #gold
participant "Calypso\nCard API" as capi #pink
participant "Calypso Card\nReader" as cardReader #lightBlue
boundary "selected\n**Card**" as card #lightBlue
participant "Calypso SAM\nReader" as samReader #lightGreen
boundary "selected\n**SAM**" as sam #lightGreen

activate app #gold
activate card #lightBlue
activate sam #lightGreen

app->app: **instantiate** Calypso card transaction:\n\t- Calypso card resource\n\t- Calypso SAM resource

note over capi
    SV balance already read when selecting the card.
end note

app->capi: <font color=red>**prepare**</font> card transaction:\n\t- open secure session (DEBIT access level)\n\t- read environment file\n\t- read contract #1\n\t- **SV Get for Debit**
activate capi  #pink
note over capi
    SV Get for Debit prepared in **last** position of a card command set to process.
end note
capi-->app
deactivate capi

app->capi: <font color=red>**process**</font> commands (keep channel open)
activate capi  #pink

capi-[#00FF00]>samReader: <font color=green>**SAM #1**<font color=red>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen

samReader->sam: get challenge
sam-->samReader: [Session SAM challenge]
samReader-[#00FF00]->capi: [Session SAM challenge]
deactivate samReader

capi-[#0000FF]>cardReader: <font color=blue>**Card #2**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

group Card APDU commands inside session
    cardReader->card: open secure session (card debit key,\n\tSession SAM challenge,\n\tSFI environment to read)
    card-->cardReader: [card challenge & environment data]
    cardReader->card: read record (contract #1)
    card-->cardReader: [contract #1 data]
    cardReader->card: SV Get (for Debit)
    card-->cardReader: [SV card challenge]
end

cardReader--[#0000FF]>capi: [SV card challenge]
deactivate cardReader

capi-->app: [Calypso card image:\n\t- identification data with SV support\n\t- environment data (updated)\n\t- contract list data\n\t- contract #1 data\n\t- SV Debit data\n\t- SV balance]]
deactivate capi

app->capi: <font color=red>**prepare**</font>:\n\t- SV Debit (specific amount)\n\t- append event record (data)\n\t- close secure session (not ratified)
activate capi  #pink
note over capi
    SV Debit prepared in **first** position of a card command set to process.
end note
capi-->app
deactivate capi

note over capi
    At the session closure, any data secure processing should be unnecessary.
end note

app->capi: <font color=red>**process**</font> commands (close channel after)
activate capi  #pink

capi-[#00FF00]>samReader: <font color=green>**SAM #2**</font>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen

note over samReader
    **Same diversifier** for the Stored Value transaction and the Secure Session.
end note

samReader->sam: select diversifier (card serial)
sam-->samReader
samReader->sam: digest init (opening data)
sam-->samReader
samReader->sam: digest update (read environment)
sam-->samReader
samReader->sam: digest update (read contract)
sam-->samReader
samReader->sam: digest update (SV Get for Debit)
sam-->samReader
samReader->sam: SV prepare Load (SV card challenge, load amount)
sam-->samReader: [SV SAM challenge, SV SAM certificate]

samReader-[#00FF00]->capi: [SV SAM certificate]
deactivate samReader

capi->capi: anticipates the future card responses

capi-[#00FF00]>samReader: <font color=green>**SAM #3**</font>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen

group <font color=red>**anticipated**</font> Card APDU responses
    samReader->sam: digest update (SV Debit specific amount\n<font color=red>**without postponed**</font> SV card certificate)
    sam-->samReader
    samReader->sam: digest update (update event record)
    sam-->samReader
end
samReader->sam: digest close
sam-->samReader: [Session SAM certificate]

samReader-[#00FF00]->capi: [Session SAM certificate]
deactivate samReader

capi-[#0000FF]>cardReader: <font color=blue>**Card #3**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

group Card APDU commands inside session
note over cardReader
    SV Debit follows **directely** a previously transmitted SV Get for Debit card command.
end note
    cardReader->card: SV Debit (amount, SV SAM challenge, SV SAM certificate)
    card-->cardReader: [<font color=red>**missing**</font> SV card certificate]
    cardReader->card: update record (event, data)
    card-->cardReader
end

cardReader->card: close secure session (Session SAM certificate)
card-->cardReader: [Session Card certificate, SV Card certificate]
cardReader->card: ratification command
card-->cardReader
cardReader->card: close card channel
card-->cardReader
deactivate card

cardReader-[#0000FF]->capi: [Session Card certificate, SV Card certificate]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #4**</font>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen
samReader->sam: digest authenticate (Session Card certificate)
sam-->samReader: [session authentication status]
samReader->sam: SV Check (SV Card certificate)
sam-->samReader: [SV authentication status]

samReader-[#00FF00]->capi: [authentification status]
deactivate samReader

capi-->app: [Calypso card image:\n\t- identification data with SV support\n\t- environment data\n\t- contract list data\n\t- contract #1 data\n\t- counter #1 data (updated)\n\t- event #1 (updated)]\nauthentification status
deactivate capi
@enduml