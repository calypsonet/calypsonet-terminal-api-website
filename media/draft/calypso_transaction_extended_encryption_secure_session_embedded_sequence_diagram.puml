@startuml

'skinparam ClassBorderColor #F1C40F
skinparam ClassBorderColor #D4AC0D
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
skinparam shadowing false

skinparam StateBorderColor #D4AC0D
skinparam ActivityBorderColor #D4AC0D

' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #EAFAF1
skinparam ClassBorderColor<<green>> #2ECC71
hide <<green>> stereotype

' Orange
skinparam ClassBackgroundColor<<orange>> #FDF2E9
skinparam ClassBorderColor<<orange>> #E67E22
hide <<orange>> stereotype

' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

actor "Ticketing Application" as app #gold
participant "Calypso API" as capi #pink
participant "Reader API" as rapi #pink
participant "Calypso Card\nReader" as cardReader #lightBlue
boundary "**Card**" as card #lightBlue
participant "Calypso SAM\nReader" as samReader #lightGreen
boundary "selected\n**SAM**" as sam #lightGreen

activate app #gold
activate sam #lightGreen

== Card selection & identification ==

note over capi
    Only reads data inside the session.
end note

app->capi: <font color=red>**prepare**</font> card selection scenario:\n\t- filter by specific AID\n\t- filter invalidated card status
activate capi  #pink
capi-->app
deactivate capi

app->rapi: <font color=red>**process**</font> explicit card selection scenario
activate rapi  #pink
rapi-[#0000FF]>cardReader: <font color=blue>**Card #1**</font>\ntransmit selection request\n\t- card selector
activate cardReader #lightBlue

cardReader->card: open card channel
activate card #lightBlue
card-->cardReader
cardReader->card: select application (aid)
card-->cardReader: [card FCI]
cardReader->cardReader: checks invalidation status

cardReader--[#0000FF]>rapi: receive selection response
deactivate cardReader

rapi-->app: selected active SmartCard image
deactivate rapi

app->capi: **cast** Calypso card
activate capi  #pink
capi-->app: [Calypso card image:\n\t- identification data\n\t- invalidation status]

deactivate capi

== Card secure transaction ==

app->app: **instantiate** Calypso card transaction:\n\t- Calypso card resource\n\t- Calypso SAM resource

app->capi: <font color=red>**prepare**</font> card transaction:\n\t- read environment file
activate capi  #pink
capi-->app
deactivate capi

app->capi: <font color=red>**process**</font> opening (DEBIT access level)
activate capi  #pink

capi-[#00FF00]>samReader: <font color=green>**SAM #1**<font color=red>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen
samReader->sam: select diversifier (card serial)
sam-->samReader
samReader->sam: get challenge
sam-->samReader: [SAM challenge]
samReader-[#00FF00]->capi: [SAM challenge]
deactivate samReader

capi-[#0000FF]>cardReader: <font color=blue>**Card #2**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

group Card APDU commands inside session
note over cardReader
    Optimization: environment file read through the session opening.
end note

    cardReader->card: open secure session (card debit key,\n\tSAM challenge,\n\tSFI environment to read)
    card-->cardReader: [card challenge & environment data]
end

cardReader--[#0000FF]>capi: [card challenge]
deactivate cardReader

capi-->app: [Calypso card image:\n\t- identification data\n\t- invalidation status\n\t- environment data\n\t- ratification status]
deactivate capi

app->app: checks support of extended modes\n - if supported encrypt data

app->capi: <font color=red>**prepare**</font> card transaction:\n\t- manage session for encryption\n\t- read last event
activate capi  #pink
capi-->app
deactivate capi

app->capi: <font color=red>**process**</font> commands
activate capi  #pink

capi-[#0000FF]>cardReader: <font color=blue>**Card #3**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

note over cardReader
    command outside of the SMAC (no Digest Update)
end note

    cardReader->card: manage secure session (authentication off, encryption on)
    card-->cardReader: ack encryption active

group#AliceBlue #AliceBlue Data Encryption

group Card APDU commands inside session
    group <font color=red>**anticipated**</font> SAM APDU response
        note over cardReader
            command without ciphered DataIn
        end note
        cardReader->card: read record (last event)
    end
    card-->cardReader: [<font color=red>{</font>last event data<font color=red>}ciphered</font>]
end

cardReader--[#0000FF]>capi: [<font color=red>{</font>last event data<font color=red>}ciphered</font>]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #2**<font color=red>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen
samReader->sam: digest init (opening data)
sam-->samReader
samReader->sam: digest update (request - read record (last event))
    note over samReader
        useless, all bytes of the command are in plain
    end note

sam-->samReader: [read record (last event)]

samReader->sam: digest update (response - <font color=red>{</font>last event data<font color=red>}ciphered</font>)
sam-->samReader: [last event data]
samReader-[#00FF00]->capi: [read record (last event), last event data]
deactivate samReader


capi-->app: [Calypso card image:\n\t- identification data\n\t- invalidation status\n\t- environment data\n\t- ratification status\n\t- last event data\n\t- encryption active]
deactivate capi

app->app: checks ratification status\n - if not ratified â†’ recovery transaction

app->app: checks transaction recovery status

app->capi: <font color=red>**prepare**</font> card transaction:\n\t- read contract list
activate capi  #pink
capi-->app
deactivate capi

app->capi: <font color=red>**process**</font> commands
activate capi  #pink

capi-[#0000FF]>cardReader: <font color=blue>**Card #4**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

group Card APDU commands inside session
    group <font color=red>**anticipated**</font> SAM APDU response
        cardReader->card: read record (contract list)
    end
    card-->cardReader: [<font color=red>{</font>contract list data<font color=red>}ciphered</font>]
end

cardReader--[#0000FF]>capi: [<font color=red>{</font>contract list data<font color=red>}ciphered</font>]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #3**<font color=red>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen
samReader->sam: digest update (request - read record (contract list))
sam-->samReader: [read record (contract list)]

samReader->sam: digest update (response - <font color=red>{</font>contract list data<font color=red>}ciphered</font>)
sam-->samReader: [contract list data]
samReader-[#00FF00]->capi: [read record (contract list), contract list data]
deactivate samReader

capi-->app: [Calypso card image:\n\t- identification data\n\t- invalidation status\n\t- environment data\n\t- ratification status\n\t- last event data\n\t- contract list data]
deactivate capi

app->app: identifies contract

app->capi: <font color=red>**prepare**</font> card transaction:\n\t- read contract #x
activate capi  #pink
capi-->app
deactivate capi

app->capi: <font color=red>**process**</font> commands
activate capi  #pink

capi-[#0000FF]>cardReader: <font color=blue>**Card #5**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

group Card APDU commands inside session
    group <font color=red>**anticipated**</font> SAM APDU response
        cardReader->card: read record (contract #x)
    end

    card-->cardReader: [<font color=red>{</font>contract #x data<font color=red>}ciphered</font>]
end

cardReader--[#0000FF]>capi: [<font color=red>{</font>contract #x data<font color=red>}ciphered</font>]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #4**<font color=red>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen
samReader->sam: digest update (request - read record (contract #x))
sam-->samReader: [read record (contract #x)]

samReader->sam: digest update (response - <font color=red>{</font>contract #x data<font color=red>}ciphered</font>)
sam-->samReader: [contract #x data]
samReader-[#00FF00]->capi: [read record (contract #x), contract #x data]
deactivate samReader

capi-->app: [Calypso card image:\n\t- identification data\n\t- invalidation status\n\t- environment data\n\t- ratification status\n\t- last event data\n\t- contract list data\n\t- contract #x data]
deactivate capi

app->app: identifies associated counter

app->capi: <font color=red>**prepare**</font> card transaction:\n\t- reader counter #x
activate capi  #pink
capi-->app
deactivate capi

app->capi: <font color=red>**process**</font> commands
activate capi  #pink

capi-[#0000FF]>cardReader: <font color=blue>**Card #6**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

group Card APDU commands inside session
    group <font color=red>**anticipated**</font> SAM APDU response
        cardReader->card: read record (counter #x)
    end

    card-->cardReader: [<font color=red>{</font>counter #x data<font color=red>}ciphered</font>]
end

cardReader--[#0000FF]>capi: [<font color=red>{</font>counter #x data<font color=red>}ciphered</font>]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #5**<font color=red>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen
samReader->sam: digest update (request - read record (counter #x))
sam-->samReader: [read record (counter #x)]

samReader->sam: digest update (response - <font color=red>{</font>counter #x value<font color=red>}ciphered</font>)
sam-->samReader: [counter #x value]
samReader-[#00FF00]->capi: [read record (counter #x), counter #x value]
deactivate samReader

capi-->app: [Calypso card image:\n\t- identification data\n\t- invalidation status\n\t- environment data\n\t- ratification status\n\t- last event data\n\t- contract list data\n\t- contract #x data\n\t- counter #x value]
deactivate capi

app->app: defines data to update

app->capi: <font color=red>**prepare**</font>:\n\t- decrease counter #x (new value)\n\t- append event record (new event)\n\t- release channel
'app->capi: <font color=red>**prepare**</font>:\n\t- append event record (new event)\n\t- decrease counter #x (new value)\n\t- release channel
activate capi  #pink

capi-->app
deactivate capi

app->capi: <font color=red>**process**</font> closing (not ratified)
activate capi  #pink
capi->capi: anticipates the future card responses
note over capi
    If the current value of the counter #x were **unknown**, then the transmission of an additional card APDU
    message would be necessary to operate the decrease counter in a different message than the session closing.
end note

capi-[#00FF00]>samReader: <font color=green>**SAM #6**</font>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen

samReader->sam: digest update (request - decrease counter(counter #x, amount))
sam-->samReader: [decrease counter(counter #x, <font color=red>{</font>amount<font color=red>}ciphered</font>]

note over samReader
    'ciphered' decrease counter response can't be anticipated
end note

samReader-[#00FF00]->capi: [SAM certificate]
deactivate samReader

capi-[#0000FF]>cardReader: <font color=blue>**Card #7**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

group Card APDU commands inside session
    cardReader->card: decrease counter(counter #x, <font color=red>{</font>amount<font color=red>}ciphered</font>)
    card-->cardReader: [<font color=red>{</font>new counter value<font color=red>}ciphered</font>]
end

cardReader-[#0000FF]->capi: [card certificate]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #7**</font>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen

samReader->sam: digest update (response - <font color=red>{</font>new counter value<font color=red>}ciphered</font>)
sam-->samReader: [new counter value]
samReader->sam: digest update (request - append event record(data))
sam-->samReader: append event record(<font color=red>{</font>new data<font color=red>}ciphered</font>)
group <font color=red>**anticipated**</font> Card APDU responses
    samReader->sam: digest update (response - ack)
    sam-->samReader: ack
end
samReader->sam: digest close
sam-->samReader: [SAM certificate]

samReader-[#00FF00]->capi: [SAM certificate]
deactivate samReader

capi-[#0000FF]>cardReader: <font color=blue>**Card #8**</font>\ntransmit card request\n\t- APDU list
activate cardReader #lightBlue

group Card APDU commands inside session
    cardReader->card: append record (event, <font color=red>{</font>data<font color=red>}ciphered</font>)
    card-->cardReader: ack
end

end

cardReader->card: close secure session (SAM certificate, as non ratified)
card-->cardReader: [card certificate]
cardReader->card: ratification command
card-->cardReader
cardReader->card: close card channel
card-->cardReader
deactivate card

cardReader-[#0000FF]->capi: [card certificate]
deactivate cardReader

capi-[#00FF00]>samReader: <font color=green>**SAM #8**</font>\ntransmit card request\n\t- APDU list
activate samReader #lightGreen
samReader->sam: digest authenticate (card certificate)
sam-->samReader: [authentication status]

samReader-[#00FF00]->capi: [authentification status]
deactivate samReader

capi-->app: [Calypso card image:\n\t- identification data\n\t- invalidation status\n\t- environment data\n\t- --ratification status--\n\t- last event data (updated)\n\t- contract list data\n\t- contract #x data\n\t- counter #x data (updated)]\nauthentification status
deactivate capi
@enduml