@startuml

enum EncryptionMode {
 ACTIVATE
 DEACTIVATE
}

enum AuthenticationMode {
 REQUESTED
 NOT_REQUESTED
}

Interface CardTransactionManager {
    +CardTransactionManager prepareManageSession(EncryptionMode encMode, AuthenticationMode authMode)

    +CardTransactionManager preparePreOpenSession(SessionAccessLevel accessLevel))
    +CardTransactionManager processOpening (SessionAccessLevel accessLevel)

    +CardTransactionManager prepareGetData (ExtendedDataTag tag)
    .. OR ..
    +CardTransactionManager prepareReadCardPublicKey ()
    +CardTransactionManager prepareReadCardKeyCertificate ()
    +CardTransactionManager prepareReadCertificationAuthorityCertificate ()
}

EncryptionMode -down-+ CardTransactionManager
AuthenticationMode -down-+ CardTransactionManager

+interface CardSecuritySetting {
            +CardSecuritySetting enablePreOpeningSession ()

}

CardTransactionManager ..> CardSecuritySetting : provide <

+enum SessionAccessLevel {
        SECURE_PERSONALIZATION
        SECURE_LOAD
        SECURE_DEBIT
        FREE_PKI
    }

CardTransactionManager ..> SessionAccessLevel : use >

+enum GetDataTag {
        FCP_FOR_CURRENT_FILE
        FCI_FOR_CURRENT_DF
        EF_LIST
        TRACEABILITY_INFORMATION
    }

    +enum ExtendedDataTag extends GetDataTag {
            CARD_PUB
            CA_CERT
            CARD_CERT
        }

    CardTransactionManager .up.> ExtendedDataTag : use >

Interface CalypsoCard {
    +String getEccCardPublicKey()

    +String getRsaCardKeyCertificate()
    +String getRsaCertificationAuthorityCertificate()
}

@enduml