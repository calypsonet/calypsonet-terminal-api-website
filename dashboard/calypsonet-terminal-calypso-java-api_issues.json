[
  {
    "url": "https://api.github.com/repos/calypsonet/calypsonet-terminal-calypso-java-api/issues/51",
    "repository_url": "https://api.github.com/repos/calypsonet/calypsonet-terminal-calypso-java-api",
    "labels_url": "https://api.github.com/repos/calypsonet/calypsonet-terminal-calypso-java-api/issues/51/labels{/name}",
    "comments_url": "https://api.github.com/repos/calypsonet/calypsonet-terminal-calypso-java-api/issues/51/comments",
    "events_url": "https://api.github.com/repos/calypsonet/calypsonet-terminal-calypso-java-api/issues/51/events",
    "html_url": "https://github.com/calypsonet/calypsonet-terminal-calypso-java-api/issues/51",
    "id": 1482276503,
    "node_id": "I_kwDOFgYEwM5YWb6X",
    "number": 51,
    "title": "Managing sam unlock at selection when unlockData needs to be diversified.",
    "user": {
      "login": "lbureau-billettiqueservices",
      "id": 102300863,
      "node_id": "U_kgDOBhj8vw",
      "avatar_url": "https://avatars.githubusercontent.com/u/102300863?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbureau-billettiqueservices",
      "html_url": "https://github.com/lbureau-billettiqueservices",
      "followers_url": "https://api.github.com/users/lbureau-billettiqueservices/followers",
      "following_url": "https://api.github.com/users/lbureau-billettiqueservices/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbureau-billettiqueservices/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbureau-billettiqueservices/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbureau-billettiqueservices/subscriptions",
      "organizations_url": "https://api.github.com/users/lbureau-billettiqueservices/orgs",
      "repos_url": "https://api.github.com/users/lbureau-billettiqueservices/repos",
      "events_url": "https://api.github.com/users/lbureau-billettiqueservices/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbureau-billettiqueservices/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-12-07T16:06:00Z",
    "updated_at": "2022-12-08T08:20:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hey everyone. I'm thinking that i'm missing a detail or something about the use of `CalypsoSamSelection`.\r\n\r\nLet's see this simple piece of code.\r\n\r\n```java\r\nCalypsoSamSelection samSelection = calypsoExtensionService.createSamSelection();\r\nsamSelection.setUnlockData(unlockData);\r\n\r\nCardSelectionManager selectionManager = smartCardService.createCardSelectionManager();\r\nselectionManager.prepareSelection(samSelection);\r\n\r\nCardSelectionResult selectionResult = selectionManager.processCardSelectionScenario(samReader);\r\ncalypsoSam = (CalypsoSam) selectionResult.getActiveSmartCard();\r\n```\r\n\r\nI have a problem with how unlockData is handled. What I can see in `CalypsoSamSelectionAdapter`, the unlockData passed to `setUnlockData` is used \"as is\", with no diversification.\r\n\r\nUnlock key diversification is done using the SAM's serial number, which would mean that i would need to make a previous selection without unlock data to get the `CalypsoSam` object, get the SAM Serial, diversify it myself, then redo another selection with unlock.\r\n\r\nIt might be clearly possible that i'm missing a `unlockSam` method somewhere that i could call after selection, but I could not see one (and i could only find the object `CmdSamUnlock` in `CalypsoSamSelectionAdapter`).\r\n\r\nIf i'm not missing anything, i would propose this slight change in interface:\r\n\r\n* make a new method `setRawUnlockData` that behaves like the current `setUnlockData`\r\n* mark `setUnlockData` as deprecated\r\n* make a new method `setUnlockDataWithDiversifier(String unlockData, Diversifier diversification)`\r\n\r\nDiversifier would like this:\r\n\r\n```java\r\npublic interface Diversifier {\r\n    byte[] diversify(CalypsoSam sam, byte[] masterKey)\r\n}\r\n```\r\n\r\nThat way, we can provide our own diversifier (the usual key diversification is, as far as i know, supposed to be secret, so implementing it directly into keyple (which is public) would break this).\r\n\r\nThe idea behind this would be that keyple should attempt the unlock using the diversified key from the diversifier object when doing the selection.",
    "reactions": {
      "url": "https://api.github.com/repos/calypsonet/calypsonet-terminal-calypso-java-api/issues/51/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/calypsonet/calypsonet-terminal-calypso-java-api/issues/51/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]
