<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Card Layer - Storage Card Specification | Smartcard-based Ticketing Terminal APIs by the Calypso Networks Association</title><link>https://terminal-api.calypsonet.org/specifications/card-layer-storagecard/</link><atom:link href="https://terminal-api.calypsonet.org/specifications/card-layer-storagecard/index.xml" rel="self" type="application/rss+xml"/><description>Card Layer - Storage Card Specification</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><image><url>https://terminal-api.calypsonet.org/media/logo.svg</url><title>Card Layer - Storage Card Specification</title><link>https://terminal-api.calypsonet.org/specifications/card-layer-storagecard/</link></image><item><title>Storage Card API (external)</title><link>https://terminal-api.calypsonet.org/specifications/card-layer-storagecard/storagecard-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://terminal-api.calypsonet.org/specifications/card-layer-storagecard/storagecard-api/</guid><description>&lt;div class="alert alert-note">
&lt;div>
Latest version &lt;strong>&lt;code>0.3.0&lt;/code>&lt;/strong>
&lt;span class="component-metadata">
&lt;i class="fas fa-sitemap pr-1 fa-fw">&lt;/i> &lt;a href="https://docs.terminal-api.calypsonet.org/calypsonet-terminal-storagecard-uml-api/" target="_blank" rel="noopener">UML class diagram&lt;/a>&lt;/span>
&lt;span class="component-metadata">
&lt;i class="fab fa-github pr-1 fa-fw">&lt;/i> &lt;a href="https://github.com/calypsonet/calypsonet-terminal-storagecard-uml-api/" target="_blank" rel="noopener">GitHub repository&lt;/a>&lt;/span>
&lt;/div>
&lt;/div>
&lt;p>As part of the &lt;strong>Card Layer&lt;/strong>, the &lt;strong>Storage Card API&lt;/strong> provides high-level functionality for selecting and performing
transactions with storage cards (NXP Mifare Ultralight, ST Microelectronics ST25 / SRT512, etc.).&lt;/p>
&lt;br>
&lt;h2 id="interfaces">Interfaces&lt;/h2>
&lt;p>The &lt;strong>Storage Card API&lt;/strong> provides the means to select a target card and then perform a transaction with the selected card.&lt;/p>
&lt;ul>
&lt;li>The result of a card selection is a storage card image whose UID and data blocks can be browsed.&lt;/li>
&lt;/ul>
&lt;p>The &lt;code>StorageCard&lt;/code> interface provide &lt;strong>accessors&lt;/strong> to recover the information of the selected storage card.&lt;/p>
&lt;p>To optimize the number of exchanges with a card reader, the &lt;strong>Storage Card API&lt;/strong> allows grouping the commands.
A set of commands could be first &lt;strong>prepared&lt;/strong>, and then be &lt;strong>processed&lt;/strong> by a selected target at the selection or
during the transaction.
A transaction with a storage card is fully managed through the &lt;code>StorageCardTransactionManager&lt;/code> interface:&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://docs.terminal-api.calypsonet.org/calypsonet-terminal-storagecard-uml-api/0.3.0/api_class_diagram.svg" alt="Storage Card API - class diagram" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p></description></item></channel></rss>